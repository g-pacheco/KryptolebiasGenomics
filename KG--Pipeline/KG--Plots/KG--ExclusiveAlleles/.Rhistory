# 3: D3_2.98047085353365
View(AnnotUp)
MDS_13_Missing <-
ggplot(data, aes_string(x = "D1_5.84937097603645", y = "D3_2.98047085353365", fill = "MissingCategory")) +
geom_point(alpha = .9, size = 2.75, shape = 21, colour = "#000000") +
scale_fill_manual(values = c("#fef0d9", "#fdcc8a", "#fc8d59", "#e34a33", "#b30000")) +
scale_x_continuous("Dimension 1 (5.8%)",
#breaks = c(-0.075, -0.05, -0.025, 0, 0.025),
#labels = c("-0.075", "-0.05", "-0.025", "0", "0.025"),
#limits = c(-0.073, 0.03),
expand = c(.015, .015)) +
scale_y_continuous("Dimension 3 (3.0%)",
#breaks = c(-0.05, -0.025, 0, 0.025, 0.05),
#labels = c("-0.05", "-0.025", "0", "0.025", "0.05"),
#limits = c(-0.0525, 0.0525),
expand = c(.015, .015)) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(fill = guide_legend(title = "Population", title.theme = element_text(size = 15, face = "bold"),
label.theme = element_text(size = 14)))
# Creates & Saves the final MDS Panel ~
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missing.pdf", device = cairo_pdf, scale = 1.1, width = 12, height = 8, dpi = 600)
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missing.jpg", scale = 1.1, width = 12, height = 8, dpi = 600)
MDS_13_Missing <-
ggplot(data, aes_string(x = "D1_5.84937097603645", y = "D3_2.98047085353365", fill = "MissingCategory")) +
geom_point(alpha = .9, size = 2.75, shape = 21, colour = "#000000") +
scale_fill_manual(values = c("#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#e34a33", "#b30000")) +
scale_x_continuous("Dimension 1 (5.8%)",
#breaks = c(-0.075, -0.05, -0.025, 0, 0.025),
#labels = c("-0.075", "-0.05", "-0.025", "0", "0.025"),
#limits = c(-0.073, 0.03),
expand = c(.015, .015)) +
scale_y_continuous("Dimension 3 (3.0%)",
#breaks = c(-0.05, -0.025, 0, 0.025, 0.05),
#labels = c("-0.05", "-0.025", "0", "0.025", "0.05"),
#limits = c(-0.0525, 0.0525),
expand = c(.015, .015)) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(fill = guide_legend(title = "Population", title.theme = element_text(size = 15, face = "bold"),
label.theme = element_text(size = 14)))
# Creates & Saves the final MDS Panel ~
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missing.pdf", device = cairo_pdf, scale = 1.1, width = 12, height = 8, dpi = 600)
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missing.jpg", scale = 1.1, width = 12, height = 8, dpi = 600)
MDS_13_Missing <-
ggplot(data, aes_string(x = "D1_5.84937097603645", y = "D3_2.98047085353365", fill = "MissingCategory")) +
geom_point(alpha = 1, size = 2.75, shape = 21, colour = "#000000") +
scale_fill_manual(values = c("#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#e34a33", "#b30000")) +
scale_x_continuous("Dimension 1 (5.8%)",
#breaks = c(-0.075, -0.05, -0.025, 0, 0.025),
#labels = c("-0.075", "-0.05", "-0.025", "0", "0.025"),
#limits = c(-0.073, 0.03),
expand = c(.015, .015)) +
scale_y_continuous("Dimension 3 (3.0%)",
#breaks = c(-0.05, -0.025, 0, 0.025, 0.05),
#labels = c("-0.05", "-0.025", "0", "0.025", "0.05"),
#limits = c(-0.0525, 0.0525),
expand = c(.015, .015)) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(fill = guide_legend(title = "Missingness Percentage", title.theme = element_text(size = 15, face = "bold"),
label.theme = element_text(size = 14)))
# Creates & Saves the final MDS Panel ~
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missing.pdf", device = cairo_pdf, scale = 1.1, width = 12, height = 8, dpi = 600)
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missing.jpg", scale = 1.1, width = 12, height = 8, dpi = 600)
MDS_13_Missing <-
ggplot(data, aes_string(x = "D1_5.84937097603645", y = "D3_2.98047085353365", fill = "MissingCategory")) +
geom_point(alpha = 1, size = 2.75, shape = 21, colour = "#000000") +
scale_fill_manual(values = c("#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#e34a33", "#b30000")) +
scale_x_continuous("Dimension 1 (5.8%)",
#breaks = c(-0.075, -0.05, -0.025, 0, 0.025),
#labels = c("-0.075", "-0.05", "-0.025", "0", "0.025"),
#limits = c(-0.073, 0.03),
expand = c(.015, .015)) +
scale_y_continuous("Dimension 3 (3.0%)",
#breaks = c(-0.05, -0.025, 0, 0.025, 0.05),
#labels = c("-0.05", "-0.025", "0", "0.025", "0.05"),
#limits = c(-0.0525, 0.0525),
expand = c(.015, .015)) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(fill = guide_legend(title = "Missingness Percentage", title.theme = element_text(size = 15, face = "bold"),
label.theme = element_text(size = 14)))
# Creates & Saves the final MDS Panel ~
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missing.pdf", device = cairo_pdf, scale = 1.1, width = 12, height = 8, dpi = 600)
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missing.jpg", scale = 1.1, width = 12, height = 8, dpi = 600)
### The BEGINNING ~~~~~
##
# ~ Plots BSG_Turbot--MDS | First written by Filipe G. Vieira with later modifications by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(optparse, tidyverse, plyr, RColorBrewer, extrafont, ggforce, ggstar)
# Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
# Loads list of options ~
option_list <- list(make_option(c('-i','--in_file'), action = 'store', type = 'character', default = "stdin", help = 'Input file'),
make_option(c('-a','--annot'), action = 'store', type = 'character', default = NULL, help = 'File with indiv annotations'),
make_option(c('--id_column'), action = 'store', type = 'numeric', default = 1, help = 'Column to use as ID'),
make_option(c('-L','--in_maj_labels'), action = 'store', type = 'character', default = NULL, help = 'Column from annotation file to use as MAJOR label'),
make_option(c('-l','--in_min_labels'), action = 'store', type = 'character', default = NULL, help = 'Column from annotation file to use as MINOR label'),
make_option(c('--no_header'), action = 'store_true', type = 'logical', default = FALSE, help = 'Input file has no header'),
make_option(c('--var_excl'), action = 'store', type = 'character', default = NULL, help = 'Variables to exclude from analysis'))
# Defines parameters ~
opt <- parse_args(OptionParser(option_list = option_list))
opt$in_file = "BSG_Turbot--AllSamples.mds"
opt$annot = "BSG_Turbot--AllSamples.annot"
opt$id_column = 1
opt$in_maj_labels = "Population"
# Loads MissingData ~
MissingData <- read.table("BSG_Turbot--AllSamples.GL-MissingData.txt", sep = "\t", header = FALSE)
# Adds column names to MissingData ~
colnames(MissingData) <- c("Sample_ID", "NumberMissing", "PercentageMissing")
# Reads data ~
data <- read.table(opt$in_file, row.names = 1, sep = "\t", header = !opt$no_header, stringsAsFactors = FALSE, check.names = FALSE)
n <- ncol(data)
# Reads annotation file ~
if(!is.null(opt$annot)){
annot <- read.table(opt$annot, sep = "\t", header = FALSE, stringsAsFactors = FALSE)
colnames(annot) <- c("Sample_ID", "Population")
# Binds the 2 DFs based on common columns ~
AnnotUp <- merge(annot, MissingData, by = "Sample_ID")
# PercentageMissing as Numeric ~
AnnotUp$PercentageMissing <- as.numeric(as.character(AnnotUp$PercentageMissing))
# Expands MissingData by adding MissingCategory ~
AnnotUp$MissingCategory <- ifelse(AnnotUp$PercentageMissing <= 10, "< 10%",
ifelse(AnnotUp$PercentageMissing <= 15, "< 15%",
ifelse(AnnotUp$PercentageMissing <= 25, "< 25%",
ifelse(AnnotUp$PercentageMissing <= 40, "< 40%",
ifelse(AnnotUp$PercentageMissing <= 50, "< 50%",
ifelse(AnnotUp$PercentageMissing <= 60, "< 60%", "Error"))))))
# Merge MDS with AnnotUp
data <- merge(data, AnnotUp, by.x = 0, by.y = opt$id_column)
# Gets rownames back into place ~
rownames(data) <- data[,1]; data <- data[,-1]
data[colnames(annot)[opt$id_column]] <- rownames(data)}
# Excludes variables ~
if( !is.null(opt$var_excl)){
opt$var_excl <- unlist(strsplit(opt$var_excl, ","))
data <- data[!(rownames(data) %in% opt$var_excl),]}
# Gets Major labels mean location ~
colors <- NULL
if(!is.null(opt$in_maj_labels)){
# Merge Major labels ~
in_maj_labels <- unlist(strsplit(opt$in_maj_labels, ",", fixed = TRUE))
tmp_data <- data[,in_maj_labels[1]]
data[in_maj_labels[1]] <- NULL
if(length(in_maj_labels) > 1){
for (cnt in 2:length(in_maj_labels)){
tmp_data <- paste(tmp_data, data[,in_maj_labels[cnt]], sep="/")
data[in_maj_labels[cnt]] <- NULL}
opt$in_maj_labels <- "MERGE"}
# Make sure Major label column is after data ~
data <- data.frame(data, tmp_data)
colnames(data)[ncol(data)] <- opt$in_maj_labels
# Converts to factor, in case there is a Major label with just numbers~
data[,opt$in_maj_labels] <- factor(data[,opt$in_maj_labels])
# If label was in input file, decreases number of data columns ~
if(is.null(opt$annot) || !opt$in_maj_labels %in% colnames(annot))
n = n - 1
# Gets mean value for Major label ~
data_mean <- ddply(data, opt$in_maj_labels, function(x){colMeans(x[, 1:n], na.rm = TRUE)})
colors <- as.character(opt$in_maj_labels)}
# Reorders Population ~
data$Population <- factor(data$Population, ordered = T,
levels = c("NorthSea",
"Kattegat",
"BalticSea"))
# Corrects legend labels ~
levels(data$Population <- sub("NorthSea", "North Sea", data$Population))
levels(data$Population <- sub("BornholmBasin", "Bornholm Basin", data$Population))
levels(data$Population <- sub("BalticSea", "Baltic Sea", data$Population))
# Dimensions ~
# 1: D1_5.84937097603645
# 2: D2_3.39161673927849
# 3: D3_2.98047085353365
# Creates MDS plots ~
MDS_12 <-
ggplot(data, aes_string(x = "D1_5.84937097603645", y = "D2_3.39161673927849", fill = "Population")) +
geom_point(alpha = .9, size = 2.75, shape = 21, colour = "#000000") +
scale_fill_manual(values = c("#d01c8b", "#4daf4a", "#377eb8", "#e66101")) +
scale_x_continuous("Dimension 1 (5.8%)",
#breaks = c(-0.075, -0.05, -0.025, 0, 0.025),
#labels = c("-0.075", "-0.05", "-0.025", "0", "0.025"),
#limits = c(-0.073, 0.03),
expand = c(.015, .015)) +
scale_y_continuous("Dimension 2 (3.4%)",
#breaks = c(-0.05, -0.025, 0, 0.025, 0.05),
#labels = c("-0.05", "-0.025", "0", "0.025", "0.05"),
#limits = c(-0.0525, 0.0525),
expand = c(.015, .015)) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(fill = guide_legend(title = "Population", title.theme = element_text(size = 15, face = "bold"),
label.theme = element_text(size = 14)))
# Creates & Saves the final MDS Panel ~
ggsave(MDS_12, file = "BSG_Turbot--MDS_12.pdf", device = cairo_pdf, scale = 1.1, width = 12, height = 8, dpi = 600)
ggsave(MDS_12, file = "BSG_Turbot--MDS_12.jpg", scale = 1.1, width = 12, height = 8, dpi = 600)
MDS_13 <-
ggplot(data, aes_string(x = "D1_5.84937097603645", y = "D3_2.98047085353365", fill = "Population")) +
geom_point(alpha = .9, size = 2.75, shape = 21, colour = "#000000") +
scale_fill_manual(values = c("#d01c8b", "#4daf4a", "#377eb8", "#e66101")) +
scale_x_continuous("Dimension 1 (5.8%)",
#breaks = c(-0.075, -0.05, -0.025, 0, 0.025),
#labels = c("-0.075", "-0.05", "-0.025", "0", "0.025"),
#limits = c(-0.073, 0.03),
expand = c(.015, .015)) +
scale_y_continuous("Dimension 3 (3.0%)",
#breaks = c(-0.05, -0.025, 0, 0.025, 0.05),
#labels = c("-0.05", "-0.025", "0", "0.025", "0.05"),
#limits = c(-0.0525, 0.0525),
expand = c(.015, .015)) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(fill = guide_legend(title = "Population", title.theme = element_text(size = 15, face = "bold"),
label.theme = element_text(size = 14)))
# Creates & Saves the final MDS Panel ~
ggsave(MDS_13, file = "BSG_Turbot--MDS_13.pdf", device = cairo_pdf, scale = 1.1, width = 12, height = 8, dpi = 600)
ggsave(MDS_13, file = "BSG_Turbot--MDS_13.jpg", scale = 1.1, width = 12, height = 8, dpi = 600)
MDS_13_Missing <-
ggplot(data, aes_string(x = "D1_5.84937097603645", y = "D3_2.98047085353365", fill = "MissingCategory")) +
geom_point(alpha = 1, size = 2.75, shape = 21, colour = "#000000") +
scale_fill_manual(values = c("#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#e34a33", "#b30000")) +
scale_x_continuous("Dimension 1 (5.8%)",
#breaks = c(-0.075, -0.05, -0.025, 0, 0.025),
#labels = c("-0.075", "-0.05", "-0.025", "0", "0.025"),
#limits = c(-0.073, 0.03),
expand = c(.015, .015)) +
scale_y_continuous("Dimension 3 (3.0%)",
#breaks = c(-0.05, -0.025, 0, 0.025, 0.05),
#labels = c("-0.05", "-0.025", "0", "0.025", "0.05"),
#limits = c(-0.0525, 0.0525),
expand = c(.015, .015)) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(fill = guide_legend(title = "Missingness Percentage", title.theme = element_text(size = 15, face = "bold"),
label.theme = element_text(size = 14)))
# Creates & Saves the final MDS Panel ~
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missing.pdf", device = cairo_pdf, scale = 1.1, width = 12, height = 8, dpi = 600)
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missing.jpg", scale = 1.1, width = 12, height = 8, dpi = 600)
#
##
### The END ~~~~~
MDS_13_Missing <-
ggplot(data, aes_string(x = "D1_5.84937097603645", y = "D3_2.98047085353365", fill = "MissingCategory")) +
geom_point(alpha = 1, size = 2.75, shape = 21, colour = "#000000") +
scale_fill_manual(values = c("#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#e34a33", "#b30000")) +
scale_x_continuous("Dimension 1 (5.8%)",
#breaks = c(-0.075, -0.05, -0.025, 0, 0.025),
#labels = c("-0.075", "-0.05", "-0.025", "0", "0.025"),
#limits = c(-0.073, 0.03),
expand = c(.015, .015)) +
scale_y_continuous("Dimension 3 (3.0%)",
#breaks = c(-0.05, -0.025, 0, 0.025, 0.05),
#labels = c("-0.05", "-0.025", "0", "0.025", "0.05"),
#limits = c(-0.0525, 0.0525),
expand = c(.015, .015)) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.position = "right",
legend.title = element_text(color = "#000000", size = 13),
legend.text = element_text(size = 11),
axis.title.x = element_text(size = 18, face = "bold", margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 18, face = "bold", margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.text = element_text(color = "#000000", size = 13),
axis.ticks = element_line(color = "#000000", size = 0.3),
axis.line = element_line(colour = "#000000", size = 0.3)) +
guides(fill = guide_legend(title = "Missingness Percentage", title.theme = element_text(size = 15, face = "bold"),
label.theme = element_text(size = 14)))
# Creates & Saves the final MDS Panel ~
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missingness.pdf", device = cairo_pdf, scale = 1.1, width = 12, height = 8, dpi = 600)
ggsave(MDS_13_Missing, file = "BSG_Turbot--MDS_13_Missingness.jpg", scale = 1.1, width = 12, height = 8, dpi = 600)
### The BEGINNING ~~~~~
##
# ~ Gets numbers of exclusive alleles based on a .geno file | By George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, extrafont)
# Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
# Loads data ~
Geno <- read.table(gzfile("OnlyKherANDKsp.geno.gz"), header = FALSE)
# Expands Geno by adding the AlleleState columns ~
Geno$HomoFixedKher_AlleleState <- rep(NA, nrow(Geno))
## 1) How many of the 5,688 SNPs are homozygous and fixed (either REF or ALT) across all 13 Kher individuals?
# Fills HomoFixedKher_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "HomoFixedKher_AlleleState"] <-
ifelse(all(Geno[ROW, c(9:10, 12:22)] == 0) |
all(Geno[ROW, c(9:10, 12:22)] == 2), "HomoFixed_Kher",
"Other")}
# Gets numbers for HomoFixedKher_AlleleState ~
table(Geno$HomoFixedKher_AlleleState)
# Creates HomoFixedKher dataframe ~
HomoFixedKher_df <- Geno[ grep("HomoFixed_Kher", Geno$HomoFixedKher_AlleleState), ]
# Expands HomoFixedKher_df by adding the AlleleState columns ~
HomoFixedKher_df$HomoFixed_KherKspESP_AlleleState <- rep(NA, nrow(HomoFixedKher_df))
HomoFixedKher_df$HomoFixed_Kher_Het_KspESP_AlleleState <- rep(NA, nrow(HomoFixedKher_df))
## 2) How many of the 4,976 SNPS that are fixed in Kher are also fixed in KspESP?
# Fills HomoFixed_KherKspESP_AlleleState ~
for(ROW in 1:nrow(HomoFixedKher_df)){
HomoFixedKher_df[ROW, "HomoFixed_KherKspESP_AlleleState"] <-
ifelse(all(HomoFixedKher_df[ROW, c(5:8, 11)] == 0) & all(HomoFixedKher_df[ROW, c(9:10, 12:22)] == 2) |
all(HomoFixedKher_df[ROW, c(5:8, 11)] == 2) & all(HomoFixedKher_df[ROW, c(9:10, 12:22)] == 0), "HomoFixed_KherKspESP",
"Other")}
# Gets numbers for HomoFixed_KherKspESP_AlleleState ~
table(HomoFixedKher_df$HomoFixed_KherKspESP_AlleleState)
## 3) How many of the 4,976 SNPs fixed in Kher are heterozygous in KspESP?
# Fills HomoFixed_Kher_Het_KspESP_AlleleState ~
for(ROW in 1:nrow(HomoFixedKher_df)){
HomoFixedKher_df[ROW, "HomoFixed_Kher_Het_KspESP_AlleleState"] <-
ifelse(all(HomoFixedKher_df[ROW, c(9:10, 12:22)] == 0) & all(HomoFixedKher_df[ROW, c(5:8, 11)] == 1) |
all(HomoFixedKher_df[ROW, c(9:10, 12:22)] == 2) & all(HomoFixedKher_df[ROW, c(5:8, 11)] == 1), "HomoFixed_Kher_Het_KspESP",
"Other")}
# Gets numbers for HomoFixed_Kher_Het_KspESP_AlleleState ~
table(HomoFixedKher_df$HomoFixed_Kher_Het_KspESP_AlleleState)
# Expands Geno by adding further AlleleState columns ~
Geno$ExclusiveToKspESP_AlleleState <- rep(NA, nrow(Geno))
Geno$ExclusiveToKher_AlleleState <- rep(NA, nrow(Geno))
Geno$HomoFixedKspESP_AlleleState <- rep(NA, nrow(Geno))
## 4) How many of the 5,688 SNPs are homozygous and fixed (either REF or ALT) across all 5 KspESP individuals?
# Fills HomoFixedKspESP_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "HomoFixedKspESP_AlleleState"] <-
ifelse(all(Geno[ROW, c(5:8, 11)] == 0) |
all(Geno[ROW, c(5:8, 11)] == 2), "HomoFixed_KspESP",
"Other")}
# Gets numbers for HomoFixedKspESP_AlleleState ~
table(Geno$HomoFixedKspESP_AlleleState)
## 5) How many SNPs contain alleles that are exclusive to KspESP?
# Fills ExclusiveToKspESP_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "ExclusiveToKspESP_AlleleState"] <-
ifelse(all(Geno[ROW, c(5:8, 11)] == 0) & all(Geno[ROW, c(9:10, 12:22)] == 2) |
all(Geno[ROW, c(5:8, 11)] == 1) & all(Geno[ROW, c(9:10, 12:22)] == 2), "ExclusiveToKspESP_REF",
ifelse(all(Geno[ROW, c(5:8, 11)] == 2) & all(Geno[ROW, c(9:10, 12:22)] == 0) |
all(Geno[ROW, c(5:8, 11)] == 1) & all(Geno[ROW, c(9:10, 12:22)] == 0), "ExclusiveToKspESP_ALT",
"Other"))}
# Gets numbers for ExclusiveToKspESP_AlleleState ~
table(Geno$ExclusiveToKspESP_AlleleState)
# Gets numbers for ExclusiveToKspESP_AlleleState ~
table(Geno$ExclusiveToKspESP_AlleleState)
View(Geno)
# Fills ExclusiveToKher_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "ExclusiveToKher_AlleleState"] <-
ifelse(all(Geno[ROW, c(9:10, 12:22)] == 0) & all(Geno[ROW, c(5:8, 11)] == 2) |
all(Geno[ROW, c(9:10, 12:22)] == 1) & all(Geno[ROW, c(5:8, 11)] == 2), "ExclusiveToKher_REF",
ifelse(all(Geno[ROW, c(9:10, 12:22)] == 2) & all(Geno[ROW, c(5:8, 11)] == 0) |
all(Geno[ROW, c(9:10, 12:22)] == 1) & all(Geno[ROW, c(5:8, 11)] == 0), "ExclusiveToKher_AÆT",
"Other"))}
# Gets numbers for ExclusiveToKher_AlleleState ~
table(Geno$ExclusiveToKher_AlleleState)
# Fills ExclusiveToKher_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "ExclusiveToKher_AlleleState"] <-
ifelse(all(Geno[ROW, c(9:10, 12:22)] == 0) & all(Geno[ROW, c(5:8, 11)] == 2) |
all(Geno[ROW, c(9:10, 12:22)] == 1) & all(Geno[ROW, c(5:8, 11)] == 2), "ExclusiveToKher_REF",
ifelse(all(Geno[ROW, c(9:10, 12:22)] == 2) & all(Geno[ROW, c(5:8, 11)] == 0) |
all(Geno[ROW, c(9:10, 12:22)] == 1) & all(Geno[ROW, c(5:8, 11)] == 0), "ExclusiveToKher_ALT",
"Other"))}
# Gets numbers for ExclusiveToKher_AlleleState ~
table(Geno$ExclusiveToKher_AlleleState)
Geno$HetKspESP_AlleleState <- rep(NA, nrow(Geno))
Geno$HetKher_AlleleState <- rep(NA, nrow(Geno))
# Fills HetKspESP_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "HetKspESP_AlleleState"] <-
ifelse(all(Geno[ROW, c(5:8, 11)] == 1), "HetKspESP",
"Other")}
# Gets numbers for ExclusiveToKher_AlleleState ~
table(Geno$HetKspESP_AlleleState)
# Fills HetKher_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "HetKher_AlleleState"] <-
ifelse(all(Geno[ROW, c(5:8, 11)] == 1), "HetKher",
"Other")}
# Gets numbers for ExclusiveToKher_AlleleState ~
table(Geno$HetKher_AlleleState)
# Fills HetKher_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "HetKher_AlleleState"] <-
ifelse(all(Geno[ROW, c(9:10, 12:22)] == 1), "HetKher",
"Other")}
# Gets numbers for ExclusiveToKher_AlleleState ~
table(Geno$HetKher_AlleleState)
# Fills HetKspESP_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "HetKspESP_AlleleState"] <-
ifelse(all(Geno[ROW, c(5:8, 11)] == 1), "HetKspESP",
"Other")}
# Gets numbers for ExclusiveToKher_AlleleState ~
table(Geno$HetKspESP_AlleleState)
## 8) How many SNPs are heterozygous in Kher?
# Fills HetKher_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "HetKher_AlleleState"] <-
ifelse(all(Geno[ROW, c(9:10, 12:22)] == 1), "HetKher",
"Other")}
# Gets numbers for ExclusiveToKher_AlleleState ~
table(Geno$HetKher_AlleleState)
Geno$HetKspESP_KspESP_Kher_AlleleState <- rep(NA, nrow(Geno))
# Fills HetKspESP_Kher_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "HetKspESP_KspESP_Kher_AlleleState"] <-
ifelse(all(Geno[ROW, c(5:8, 11)] == 1) &
all(Geno[ROW, c(9:10, 12:22)] == 1), "HetKspESP_Kher",
"Other")}
# Gets numbers for HetKspESP_Kher_AlleleState ~
table(Geno$HetKspESP_Kher_AlleleState)
Geno$HetKspESP_Kher_AlleleState <- rep(NA, nrow(Geno))
# Fills HetKspESP_Kher_AlleleState ~
for(ROW in 1:nrow(Geno)){
Geno[ROW, "HetKspESP_Kher_AlleleState"] <-
ifelse(all(Geno[ROW, c(5:8, 11)] == 1) &
all(Geno[ROW, c(9:10, 12:22)] == 1), "HetKspESP_Kher",
"Other")}
# Gets numbers for HetKspESP_Kher_AlleleState ~
table(Geno$HetKspESP_Kher_AlleleState)
